-----------------------------------------------Extended Excercise----------------------------
----------------------------This excercise covers DQL,DDL,DML,DCL,TCL Statements, Constraints, Merge----------------------
------------------------------------------------------DDL-----------------------------------------

--
--
--CREATE 
--ALTER ----- MODIFY, RENAME
--DROP
--
--


CREATE TABLE Sample(
sam1 INT,
sam2 NUMBER(4),
sam3 VARCHAR2(2000),
sam4 CHAR(4)
);

ALTER TABLE Sample
MODIFY sam1 NUMBER(6);

ALTER TABLE Sample
MODIFY sam2 VARCHAR2(200);

ALTER TABLE Sample 
Rename COLUMN sam3 TO sam33;

ALTER TABLE Sample 
RENAME TO SampleT;

ALTER TABLE SampleT 
RENAME TO Sample;

ALTER TABLE Sample ADD CONSTRAINT chk_unique
UNIQUE (sam1);

ALTER TABLE Sample DROP CONSTRAINT chk_unique;

ALTER TABLE Sample DROP Column sam1;

ALTER TABLE Sample
MODIFY COLUMN sam1 NUMBER(5);


CREATE TABLE Employees (
E_id NUMBER(9) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
E_first VARCHAR2(45) NOT NULL,
E_last VARCHAR(45) NOT NULL,
E_age INT,
E_gender CHAR(6),
E_DOB date
);


CREATE TABLE Employees_details(
E_id NUMBER(9),
E_first VARCHAR2(45),
E_last VARCHAR2(45),
E_designation VARCHAR(45)
);

--ALTER TABLE Employees_details ADD E_id FOREIGN KEY REFERNCES Employees(E_id);

ALTER TABLE EMPLOYEES_DETAILS ADD CONSTRAINT fk_Employees_details_employees
FOREIGN KEY (E_id) REFERENCES Employees(E_id);

ALTER TABLE Employees_details DROP CONSTRAINT pk_Employees_details;

ALTER TABLE EMPLOYEES_DETAILS ADD CONSTRAINT fk_employees_details_employees
FOREIGN KEY (E_first) REFERENCES Employees(E_first);

ALTER TABLE EMPLOYEES_DETAILS ADD CONSTRAINT fk_employees_details_employees_last
FOREIGN KEY (E_last) REFERENCES Employees(E_last);

ALTER TABLE Employees ADD Salary NUMBER(8);

ALTER TABLE Employees ADD CONSTRAINT chk_age CHECK (E_age >= 18);
ALTER TABLE Employees ADD CONSTRAINT chk_gender CHECK (E_gender = 'Male' OR E_gender = 'Female');
ALTER TABLE Employees ADD E_JDate date;
ALTER TABLE Employees ADD E_LDate date;


CREATE TABLE Products (
P_id NUMBER(15) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
P_name VARCHAR(45) NOT NULL,
P_price NUMBER
);

--ALTER TABLE Products ADD CONSTRAINT unk_name UNIQUE (P_name);


ALTER TABLE Products ADD CONSTRAINT chk_name UNIQUE (P_name );

CREATE TABLE Procurment(
Proc_id NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
Proc_date date NOT NULL,
Proc_items VARCHAR2(2000),
Proc_Tvalue NUMBER(15)
);



CREATE TABLE Product_Procurement (
Proc_id NUMBER(10),
P_id NUMBER(15),
P_name VARCHAR(45),
P_quantity INT NOT NULL,
P_PPItem NUMBER(10) NOT NULL,
P_Tprice NUMBER(12) NOT NULL
);

ALTER TABLE Product_Procurement DROP COLUMN P_Tprice;

ALTER TABLE Product_Procurement ADD CONSTRAINT fk_product_proc_products 
FOREIGN KEY (P_id) REFERENCES Products(P_id);

ALTER TABLE Product_Procurement ADD CONSTRAINT fk_product_proc_products_name
FOREIGN KEY (P_name) REFERENCES Products(P_name);

ALTER TABLE Product_Procurement ;


CREATE TABLE Sales(
S_id NUMBER(9) PRIMARY KEY,
SP_id NUMBER(9),
P_id NUMBER(15),
P_name VARCHAR2(45),
S_date date,
S_price NUMBER(12)
);

CREATE TABLE Product_Sales(
S_id NUMBER(9),
S_items VARCHAR2(2000)
);


DROP TABLE Employees;
DROP TABLE Products;
DROP TABLE Procurment;
DROP TABLE Product_Procurement;




---------------------------------------DML------------------------------------
--------------------------------------INSERT-----------------------------

INSERT INTO employees(E_first, E_last, e_age, E_gender, e_dob, E_JDate, E_LDate)
VALUES('Faizan', 'ALam', 24, 'Male', date '2002-12-22', date '2023-11-17', NULL);

INSERT INTO Employees (E_first, E_last, E_age, E_gender, E_DOB, E_JDate, E_LDate)
VALUES ('Ali', 'Khan', 28, 'Male', date '1997-02-11',
        date '2018-03-10', date '2023-11-15');

INSERT INTO Employees (E_first, E_last, E_age, E_gender, E_DOB, E_JDate, E_LDate)
VALUES ('Sara', 'Ahmed', 30, 'Female', date'1995-10-23',
        date'2017-06-01', date'2024-08-10');

INSERT INTO Employees (E_first, E_last, E_age, E_gender, E_DOB, E_JDate, E_LDate)
VALUES ('Hassan', 'Raza', 22, 'Male', date'2003-07-18',
        date '2022-02-12', NULL);

INSERT INTO Employees (E_first, E_last, E_age, E_gender, E_DOB, E_JDate, E_LDate)
VALUES ('Ayesha', 'Malik', 25, 'Female', date'2000-04-30',
        date'2020-09-25', NULL);

INSERT INTO Employees (E_first, E_last, E_age, E_gender, E_DOB, E_JDate, E_LDate)
VALUES ('Usman', 'Sheikh', 35, 'Male', date'1990-11-04',
        date'2010-01-14', date'2022-05-20');

INSERT INTO Employees (E_first, E_last, E_age, E_gender, E_DOB, E_JDate, E_LDate)
VALUES ('Fatima', 'Noor', 21, 'Female', date'2004-06-27',
        date'2023-01-05', NULL);

INSERT INTO Employees (E_first, E_last, E_age, E_gender, E_DOB, E_JDate, E_LDate)
VALUES ('Bilal', 'Hameed', 33, 'Male', date '1992-08-15',
        date'2016-04-10', date'2023-03-01');


INSERT INTO Employees (E_first, E_last, E_age, E_gender, E_DOB, E_JDate, E_LDate)
VALUES ('Zainab', 'Ali', 24, 'Female', date'2001-09-05',
        date'2021-07-20', NULL);

        

INSERT INTO Products (P_name, P_price) 
VALUES ('Laptop', 145000);

INSERT INTO Products (P_name, P_price) 
VALUES ('Smartphone', 89000);

INSERT INTO Products (P_name, P_price) 
VALUES ('Wireless Earbuds', 8500);

INSERT INTO Products (P_name, P_price) 
VALUES ('Smartwatch', 23000);

INSERT INTO Products (P_name, P_price) 
VALUES ('Mechanical Keyboard', 12500);

INSERT INTO Products (P_name, P_price) 
VALUES ('Gaming Mouse', 6500);

INSERT INTO Products (P_name, P_price) 
VALUES ('Monitor 27-inch', 48000);

INSERT INTO Products (P_name, P_price) 
VALUES ('External SSD 1TB', 29000);

INSERT INTO Products (P_name, P_price) 
VALUES ('Bluetooth Speaker', 10500);

INSERT INTO Products (P_name, P_price) 
VALUES ('Printer', 27000);



INSERT INTO Product_Procurement (P_id, P_name, P_quantity, P_PPItem, P_Tprice)
VALUES (1, 'Laptop', 10, 125000, 1250000);

INSERT INTO Product_Procurement (P_id, P_name, P_quantity, P_PPItem, P_Tprice)
VALUES (2, 'Smartphone', 25, 78000, 1950000);

INSERT INTO Product_Procurement (P_id, P_name, P_quantity, P_PPItem, P_Tprice)
VALUES (3, 'Wireless Earbuds', 50, 7000, 350000);

INSERT INTO Product_Procurement (P_id, P_name, P_quantity, P_PPItem, P_Tprice)
VALUES (4, 'Smartwatch', 20, 19000, 380000);

INSERT INTO Product_Procurement (P_id, P_name, P_quantity, P_PPItem, P_Tprice)
VALUES (5, 'Mechanical Keyboard', 30, 10000, 300000);

INSERT INTO Product_Procurement (P_id, P_name, P_quantity, P_PPItem, P_Tprice)
VALUES (6, 'Gaming Mouse', 40, 5000, 200000);

INSERT INTO Product_Procurement (P_id, P_name, P_quantity, P_PPItem, P_Tprice)
VALUES (7, 'Monitor 27-inch', 15, 42000, 630000);

INSERT INTO Product_Procurement (P_id, P_name, P_quantity, P_PPItem, P_Tprice)
VALUES (8, 'External SSD 1TB', 25, 25000, 625000);


INSERT INTO Sales (SP_id, P_id, P_name, S_date, S_price)
VALUES (101, 1, 'Laptop', DATE '2025-02-14', 150000);

INSERT INTO Sales (SP_id, P_id, P_name, S_date, S_price)
VALUES (102, 2, 'Smartphone', DATE '2025-03-02', 90000);

INSERT INTO Sales (SP_id, P_id, P_name, S_date, S_price)
VALUES (103, 3, 'Wireless Earbuds', DATE '2025-04-10', 9500);

INSERT INTO Sales (SP_id, P_id, P_name, S_date, S_price)
VALUES (104, 4, 'Smartwatch', DATE '2025-05-22', 24000);

INSERT INTO Sales (SP_id, P_id, P_name, S_date, S_price)
VALUES (105, 5, 'Mechanical Keyboard', DATE '2025-06-11', 13000);

INSERT INTO Sales (SP_id, P_id, P_name, S_date, S_price)
VALUES (106, 6, 'Gaming Mouse', DATE '2025-07-19', 7000);

INSERT INTO Sales (SP_id, P_id, P_name, S_date, S_price)
VALUES (107, 7, 'Monitor 27-inch', DATE '2025-08-23', 52000);

INSERT INTO Sales (SP_id, P_id, P_name, S_date, S_price)
VALUES (108, 8, 'External SSD 1TB', DATE '2025-09-05', 32000);



SELECT * FROM employees;
SELECT * FROM products;
SELECT * FROM procurment;
SELECT * FROM product_procurement;
SELECT * FROM Sales;

---------------------------------------DQL----------------------------------
SELECT * FROM Employees;
SELECT * FROM Employees_details;
SELECT * FROM products;
SELECT * FROM procurment;
SELECT * FROM product_procurement;
SELECT * FROM Sales;



SELECT E_first, E_last FROM Employees
WHERE SALARY < 70000;


SELECT E_FIRST, E_last FROM Employees
WHERE SALARY BETWEEN 60000 AND 80000;

SELECT E_FIRST, E_Last FROM EMployees
WHERE (SALARY BETWEEN 6000 AND 80000) AND (E_first = 'Ali'); 

SELECT E_FIRst, E_last, salary FROM Employees
WHERE (SALARY IN (65000, 70000)) OR (SALARY >80000);

SELECT E_FIRST, E_LAST, SALARY FROM Employees
WHERE E_First LIKE 'F%';

SELECT E_FIRST, E_LAST, SALARY FROM Employees
WHERE (E_first LIKE 'F_t%a') AND (SALARY > 50000);


-------------------------------------------DML----------------------------------------
------------------------------------------Update--------------------------------------
SELECT * FROM Employees;
SELECT * FROM products;
SELECT * FROM EMPLOYEES_DETAILS;

UPDATE employees 
SET E_last = 'Alam'
WHERE E_ID = 1;

UPDATE employees 
SET SALARY = 50000;

UPDATE employees 
SET SALARY = 65000
WHERE E_gender = 'Female';

UPDATE employees 
SET SALARY = 70000
WHERE E_LAST LIKE 'A%';

UPDATE employees 
SET SALARY = 86000, E_Age = 30
WHERE (E_first = 'Hassan' AND (E_GENDER = 'Male' OR E_GENDER = 'Female'));    --------THE QUERY IGNORES MIDDLE CONDITION 
                                                                            ----------WITHOUT PARENTHESIS.
UPDATE employees 
SET E_DOB = date '2002-11-22'
WHERE (E_First = 'Faizan' AND E_age = 24);


UPDATE Employees
SET E_DOB = date '2002-12-22'
WHERE ((E_last = 'Alam' AND E_gender = 'Male') OR E_id = 1);

DROP TABLE Employees; --------------------cannot be dropped
TRUNCATE TABLE Employees; ----------------cannot be truncated

INSERT INTO EMPLOYEES_DETAILS(E_id, E_first, E_last, E_designation)
VALUES(5, 'Ayesha', 'Malik', 'CMO');


---------------------------------DELETE-----------------------------------
DELETE FROM Employees
WHERE E_id = 5;             ---------------cannot be deleted, referance data present in child table

DELETE FROM Employees       -----------------DELETED, No referance row present in Child table.
WHERE E_id = 9;

DELETE FROM Employees
WHERE E_First LIKE 'Z_a%';

DELETE FROM Employees
WHERE (SALARY > 90000) AND (E_first = 'Faizan');

-----All  senarios used above with WHERE clause are also applicable here.


---------------------------------DCL-------------------------

GRANT SELECT, INSERT ON Employees TO faizan;
REVOKE SELECT, INSERT ON Employees FROM faizan;


--------------------------------TCL------------__-----------

Commit;
Rollback;


------------------------------COMMENTS on TABLE and COLUMNS------------
COMMENT ON TABLE Employee IS 'This table contains employees data';
COMMENT ON COLUMN Employee.column IS 'This Column is the primary key of a Table EMPLOYEE';


--------------------------------------MERGE STATEMENT-------------------------------
CREATE TABLE Employees_TBU(
E_id NUMBER(9) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
E_first VARCHAR2(30),
E_last VARCHAR2(30),
E_Age INT,
E_Gender Char(6),
E_DOB date,
E_JDATE date,
E_LDATE date,
E_Salary NUMBER(9)
);

select * from Employees_TBU;
CREATE TABLE Employees (
E_id NUMBER(9) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
E_first VARCHAR2(45) NOT NULL,
E_last VARCHAR(45) NOT NULL,
E_age INT,
E_gender CHAR(6),
E_DOB date
);
ALTER TABLE EMPLOYEES REnAME COLUMN E_Salary TO Salary;

MERGE INTO Employees_TBU trgt
USING Employees src 
ON (src.E_id = trgt.E_id)

WHEN MATCHED 
THEN UPDATE SET trgt.E_Salary = src.Salary

WHEN NOT MATCHED THEN
INSERT(E_first, E_last, E_age, E_gender, E_dob, E_Jdate, E_Ldate, E_Salary)
VALUES(src.E_first, src.E_last, src.E_age, src.E_gender, src.E_dob, src.E_Jdate, src.E_Ldate, src.Salary);


select * from employees_tbu;

MERGE INTO Employees_TBU trgt
USING EMPLOYEES src
ON ((src.E_first = trgt.E_first) AND (src.E_last = trgt.E_last))

WHEN MATCHED THEN
UPDATE SET trgt.E_gender = src.E_gender

WHEN NOT MATCHED THEN
INSERT (E_first, E_last, E_age, E_gender, E_dob, E_Jdate, E_Ldate, E_Salary)
VALUES (src.E_first, src.E_last, src.E_age, src.E_gender, src.E_dob, src.E_Jdate, src.E_Ldate, src.Salary);


MERGE INTO EMployees_TBU src
USING Employees trgt
ON (src.E_DOB = trgt. E_DOB)

WHEN MATCHED THEN DELETE WHERE trgt.E_gender = src.E_gender;
--UPDATE SET trgt.E_gender = src.E_gender
DELETE WHERE trgt.E_gender = src.E_gender;





-------------------------------------ORDER BY-------------------------
SELECT * FROM EMPLOYEES
ORDER BY SALARY DESC;

SELECT * FROM EMPLOYEES
ORDER BY SALARY;

SELECT * FROM EMPLOYEES
ORDER BY E_DOB, SALARY;

SELECT * FROM EMPLOYEES
ORDER BY 6,9;

SELECT * FROM EMPLOYEES
ORDER BY E_Ldate NULLS FIRST;

SELECT * FROM EMPLOYEES
ORDER BY E_Ldate NULLS LAST;

SELECT * FROM EMPLOYEES
ORDER BY SALARY DESC
FETCH FIRST 5 ROW ONLY;

SELECT * FROM EMPLOYEES
ORDER BY SALARY 
OFFSET 5 ROWS
FETCH FIRST 2 ROW ONLY;

